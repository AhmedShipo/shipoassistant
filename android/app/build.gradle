// android/app/build.gradle
// هذا الملف يتم تعديله لدمج المتغيرات وإزالة التبعيات المكررة لـ Cordova

// التعديلات اليدوية قد تفقد عند تشغيل 'capacitor update'.
// نوصي باستخدام variables.gradle أو postBuildExtras.
// DO NOT EDIT THIS FILE! IT IS GENERATED EACH TIME "capacitor update" IS RUN

// ************ ابدأ بتطبيق الـ PLUGINS أولاً ************
apply plugin: 'com.android.application' // هذا مهم جداً ويجب أن يكون هنا في الأعلى
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'com.google.gms.google-services' // إذا كنت تستخدم خدمات جوجل
// ******************************************************

// الآن يمكنك تضمين ملفات Gradle الأخرى التي تحتوي على متغيرات أو إعدادات إضافية
apply from: "variables.gradle" // الآن هذا سيُطبق بعد تعريف كتلة android
apply from: "../capacitor-cordova-android-plugins/cordova.variables.gradle" // هذا الملف مهم أيضاً

android {
    namespace "com.shipo.assistant" // يجب ان يتطابق مع package في AndroidManifest.xml
    compileSdk 34 // اصدار الـ SDK المستخدم للكومبايل (احدث اصدار متاح او المطلوب)

    defaultConfig {
        applicationId "com.shipo.assistant" // اسم حزمة التطبيق (يجب ان يتطابق مع package في AndroidManifest.xml)
        minSdk 23 // الحد الادنى لاصدار الـ SDK المدعوم (اندرويد 6.0)
        targetSdk 34 // اصدار الـ SDK الذي يستهدفه تطبيقك (احدث اصدار او الاكثر شيوعا)
        versionCode 1 // رقم اصدار التطبيق (يزداد مع كل تحديث)
        versionName "1.0" // اسم اصدار التطبيق (يعرض للمستخدم)

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false // تمكين تصغير الكود وتحسينه (يجب ضبطه على true للاصدار النهائي)
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // هنا يتم اضافة اعدادات التوقيع لاصدار APK/AAB
            // signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.appcompat:appcompat:1.6.1"
    implementation "androidx.core:core-ktx:1.12.0"
    implementation "com.google.android.material:material:1.11.0"
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.1.5"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"

    // Capacitor dependencies - هذه يجب أن تكون موجودة وجاهزة
    implementation project(':capacitor-android')
    implementation project(':capacitor-app')
    implementation project(':capacitor-camera')
    implementation project(':capacitor-filesystem')
    implementation project(':capacitor-keyboard')
    implementation project(':capacitor-preferences') // تأكد من وجوده إذا كنت تستخدمه
    implementation project(':capacitor-splash-screen')
    implementation project(':capacitor-status-bar')

    // Google Play Services - باستخدام المتغيرات من variables.gradle
    // تأكد من أن playServicesAuthVersion و playServicesIdentityVersion
    // تم تعريفها في variables.gradle
    implementation "com.google.android.gms:play-services-auth:$playServicesAuthVersion"
    implementation "com.google.android.gms:play-services-identity:$playServicesIdentityVersion"

    // إضافة مكتبة Jsoup لدعم البحث العميق في performDeepSearch
    implementation "org.jsoup:jsoup:1.15.3"
}

if (hasProperty('postBuildExtras')) {
    postBuildExtras()
}